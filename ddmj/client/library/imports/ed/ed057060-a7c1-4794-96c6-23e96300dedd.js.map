{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\components/assets\\scripts\\components\\ImageLoader.js"],"names":["loadImage","url","code","callback","cc","loader","load","err","tex","spriteFrame","SpriteFrame","Rect","width","height","getBaseInfo","userid","vv","baseInfoMap","http","sendRequest","ret","headimgurl","info","name","sex","master_url","Class","extends","Component","properties","onLoad","setupSpriteFrame","setUserID","sys","isNative","images","self","_spriteFrame","spr","getComponent","Sprite"],"mappings":";;;;;;AAAA,SAASA,SAAT,CAAmBC,GAAnB,EAAuBC,IAAvB,EAA4BC,QAA5B,EAAqC;AACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BAC,OAAGC,MAAH,CAAUC,IAAV,CAAeL,GAAf,EAAmB,UAAUM,GAAV,EAAcC,GAAd,EAAmB;AAClC,YAAIC,cAAc,IAAIL,GAAGM,WAAP,CAAmBF,GAAnB,EAAwBJ,GAAGO,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAcH,IAAII,KAAlB,EAAyBJ,IAAIK,MAA7B,CAAxB,CAAlB;AACAV,iBAASD,IAAT,EAAcO,WAAd;AACH,KAHD;AAIH;;AAED,SAASK,WAAT,CAAqBC,MAArB,EAA4BZ,QAA5B,EAAqC;AACjC,QAAGC,GAAGY,EAAH,CAAMC,WAAN,IAAqB,IAAxB,EAA6B;AACzBb,WAAGY,EAAH,CAAMC,WAAN,GAAoB,EAApB;AACH;;AAED,QAAGb,GAAGY,EAAH,CAAMC,WAAN,CAAkBF,MAAlB,KAA6B,IAAhC,EAAqC;AACjCZ,iBAASY,MAAT,EAAgBX,GAAGY,EAAH,CAAMC,WAAN,CAAkBF,MAAlB,CAAhB;AACH,KAFD,MAGI;AACAX,WAAGY,EAAH,CAAME,IAAN,CAAWC,WAAX,CAAuB,YAAvB,EAAoC,EAACJ,QAAOA,MAAR,EAApC,EAAoD,UAASK,GAAT,EAAa;AAC7D,gBAAInB,MAAM,IAAV;AACA,gBAAGmB,IAAIC,UAAP,EAAkB;AACfpB,sBAAMmB,IAAIC,UAAJ,GAAiB,MAAvB;AACF;AACD,gBAAIC,OAAO;AACPC,sBAAKH,IAAIG,IADF;AAEPC,qBAAIJ,IAAII,GAFD;AAGPvB,qBAAIA;AAHG,aAAX;AAKAG,eAAGY,EAAH,CAAMC,WAAN,CAAkBF,MAAlB,IAA4BO,IAA5B;AACAnB,qBAASY,MAAT,EAAgBO,IAAhB;AAEH,SAbD,EAaElB,GAAGY,EAAH,CAAME,IAAN,CAAWO,UAbb;AAcH;AACJ;;AAEDrB,GAAGsB,KAAH,CAAS;AACLC,aAASvB,GAAGwB,SADP;AAELC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVQ,KAFP;;AAeL;AACAC,YAAQ,kBAAY;AAChB,aAAKC,gBAAL;AACH,KAlBI;;AAoBLC,eAAU,mBAASjB,MAAT,EAAgB;AACtB,YAAGX,GAAG6B,GAAH,CAAOC,QAAP,IAAmB,KAAtB,EAA4B;AACxB;AACH;AACD,YAAG,CAACnB,MAAJ,EAAW;AACP;AACH;AACD,YAAGX,GAAGY,EAAH,CAAMmB,MAAN,IAAgB,IAAnB,EAAwB;AACpB/B,eAAGY,EAAH,CAAMmB,MAAN,GAAe,EAAf;AACH;;AAED,YAAIC,OAAO,IAAX;AACAtB,oBAAYC,MAAZ,EAAmB,UAASb,IAAT,EAAcoB,IAAd,EAAmB;AACnC,gBAAGA,QAAQA,KAAKrB,GAAhB,EAAoB;AACfD,0BAAUsB,KAAKrB,GAAf,EAAmBc,MAAnB,EAA0B,UAAUR,GAAV,EAAcE,WAAd,EAA2B;AACjD2B,yBAAKC,YAAL,GAAoB5B,WAApB;AACA2B,yBAAKL,gBAAL;AACH,iBAHD;AAIH;AACJ,SAPD;AAQH,KAxCI;;AA0CLA,sBAAiB,4BAAU;AACvB,YAAG,KAAKM,YAAR,EAAqB;AACjB,gBAAIC,MAAM,KAAKC,YAAL,CAAkBnC,GAAGoC,MAArB,CAAV;AACA,gBAAGF,GAAH,EAAO;AACHA,oBAAI7B,WAAJ,GAAkB,KAAK4B,YAAvB;AACH;AACJ;AACJ;AACD;AACA;;AAEA;AArDK,CAAT","file":"ImageLoader.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["function loadImage(url,code,callback){\r\n    /*\r\n    if(cc.vv.images == null){\r\n        cc.vv.images = {};\r\n    }\r\n    var imageInfo = cc.vv.images[url];\r\n    if(imageInfo == null){\r\n        imageInfo = {\r\n            image:null,\r\n            queue:[],\r\n        };\r\n        cc.vv.images[url] = imageInfo;\r\n    }\r\n    \r\n    cc.loader.load(url,function (err,tex) {\r\n        imageInfo.image = tex;\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        for(var i = 0; i < imageInfo.queue.length; ++i){\r\n            var itm = imageInfo.queue[i];\r\n            itm.callback(itm.code,spriteFrame);\r\n        }\r\n        itm.queue = [];\r\n    });\r\n    if(imageInfo.image != null){\r\n        var tex = imageInfo.image;\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        callback(code,spriteFrame);\r\n    }\r\n    else{\r\n        imageInfo.queue.push({code:code,callback:callback});\r\n    }*/\r\n    cc.loader.load(url,function (err,tex) {\r\n        var spriteFrame = new cc.SpriteFrame(tex, cc.Rect(0, 0, tex.width, tex.height));\r\n        callback(code,spriteFrame);\r\n    });\r\n};\r\n\r\nfunction getBaseInfo(userid,callback){\r\n    if(cc.vv.baseInfoMap == null){\r\n        cc.vv.baseInfoMap = {};\r\n    }\r\n    \r\n    if(cc.vv.baseInfoMap[userid] != null){\r\n        callback(userid,cc.vv.baseInfoMap[userid]);\r\n    }\r\n    else{\r\n        cc.vv.http.sendRequest('/base_info',{userid:userid},function(ret){\r\n            var url = null;\r\n            if(ret.headimgurl){\r\n               url = ret.headimgurl + \".jpg\";\r\n            }\r\n            var info = {\r\n                name:ret.name,\r\n                sex:ret.sex,\r\n                url:url,\r\n            }\r\n            cc.vv.baseInfoMap[userid] = info;\r\n            callback(userid,info);\r\n            \r\n        },cc.vv.http.master_url);   \r\n    }  \r\n};\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.setupSpriteFrame();\r\n    },\r\n    \r\n    setUserID:function(userid){\r\n        if(cc.sys.isNative == false){\r\n            return;\r\n        }\r\n        if(!userid){\r\n            return;\r\n        }\r\n        if(cc.vv.images == null){\r\n            cc.vv.images = {};\r\n        }\r\n        \r\n        var self = this;\r\n        getBaseInfo(userid,function(code,info){\r\n           if(info && info.url){\r\n                loadImage(info.url,userid,function (err,spriteFrame) {\r\n                    self._spriteFrame = spriteFrame;\r\n                    self.setupSpriteFrame();\r\n                });   \r\n            } \r\n        });\r\n    },\r\n    \r\n    setupSpriteFrame:function(){\r\n        if(this._spriteFrame){\r\n            var spr = this.getComponent(cc.Sprite);\r\n            if(spr){\r\n                spr.spriteFrame = this._spriteFrame;    \r\n            }\r\n        }\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}