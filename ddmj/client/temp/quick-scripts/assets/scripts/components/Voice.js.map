{"version":3,"sources":["Voice.js"],"names":["cc","Class","extends","Component","properties","_lastTouchTime","_voice","_volume","_voice_failed","_lastCheckTime","_timeBar","MAX_TIME","onLoad","find","active","scaleX","i","children","length","btnVoice","vv","utils","addClickEvent","node","self","on","Node","EventType","TOUCH_START","console","log","voiceMgr","prepare","Date","now","TOUCH_MOVE","TOUCH_END","cancel","onVoiceOK","TOUCH_CANCEL","release","time","msg","getVoiceData","net","send","onBtnOKClicked","update","dt","v","getVoiceLevel","percent"],"mappings":"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","file":"Voice.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _lastTouchTime:null,\r\n        _voice:null,\r\n        _volume:null,\r\n        _voice_failed:null,\r\n        _lastCheckTime:-1,\r\n        _timeBar:null,\r\n        MAX_TIME:15000,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        this._voice = cc.find(\"Canvas/voice\");\r\n        this._voice.active = false;\r\n        \r\n        this._voice_failed = cc.find(\"Canvas/voice/voice_failed\");\r\n        this._voice_failed.active = false;\r\n        \r\n        this._timeBar = cc.find(\"Canvas/voice/time\");\r\n        this._timeBar.scaleX = 0.0;\r\n        \r\n        this._volume = cc.find(\"Canvas/voice/volume\");\r\n        for(var i = 1; i < this._volume.children.length; ++i){\r\n            this._volume.children[i].active = false;\r\n        }\r\n        \r\n        var btnVoice = cc.find(\"Canvas/voice/voice_failed/btn_ok\");\r\n        if(btnVoice){\r\n            cc.vv.utils.addClickEvent(btnVoice,this.node,\"Voice\",\"onBtnOKClicked\");\r\n        }\r\n        \r\n        var self = this;\r\n        var btnVoice = cc.find(\"Canvas/btn_voice\");\r\n        if(btnVoice){\r\n            btnVoice.on(cc.Node.EventType.TOUCH_START,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_START\");\r\n                cc.vv.voiceMgr.prepare(\"record.amr\");\r\n                self._lastTouchTime = Date.now();\r\n                self._voice.active = true;\r\n                self._voice_failed.active = false;\r\n            });\r\n\r\n            btnVoice.on(cc.Node.EventType.TOUCH_MOVE,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_MOVE\");\r\n            });\r\n                        \r\n            btnVoice.on(cc.Node.EventType.TOUCH_END,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_END\");\r\n                if(Date.now() - self._lastTouchTime < 1000){\r\n                    self._voice_failed.active = true;\r\n                    cc.vv.voiceMgr.cancel();\r\n                }\r\n                else{\r\n                    self.onVoiceOK();\r\n                }\r\n                self._lastTouchTime = null;\r\n            });\r\n            \r\n            btnVoice.on(cc.Node.EventType.TOUCH_CANCEL,function(){\r\n                console.log(\"cc.Node.EventType.TOUCH_CANCEL\");\r\n                cc.vv.voiceMgr.cancel();\r\n                self._lastTouchTime = null;\r\n                self._voice.active = false;\r\n            });\r\n        }\r\n    },\r\n    \r\n    onVoiceOK:function(){\r\n        if(this._lastTouchTime != null){\r\n            cc.vv.voiceMgr.release();\r\n            var time = Date.now() - this._lastTouchTime;\r\n            var msg = cc.vv.voiceMgr.getVoiceData(\"record.amr\");\r\n            cc.vv.net.send(\"voice_msg\",{msg:msg,time:time});\r\n        }\r\n        this._voice.active = false;\r\n    },\r\n    \r\n    onBtnOKClicked:function(){\r\n        this._voice.active = false;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this._voice.active == true && this._voice_failed.active == false){\r\n            if(Date.now() - this._lastCheckTime > 300){\r\n                for(var i = 0; i < this._volume.children.length; ++i){\r\n                    this._volume.children[i].active = false;\r\n                }\r\n                var v = cc.vv.voiceMgr.getVoiceLevel(7);\r\n                if(v >= 1 && v <= 7){\r\n                    this._volume.children[v-1].active = true;   \r\n                }\r\n                this._lastCheckTime = Date.now();\r\n            }\r\n        }\r\n        \r\n        if(this._lastTouchTime){\r\n            var time = Date.now() - this._lastTouchTime;\r\n            if(time >= this.MAX_TIME){\r\n                this.onVoiceOK();\r\n                this._lastTouchTime = null;\r\n            }\r\n            else{\r\n                var percent = time / this.MAX_TIME;\r\n                this._timeBar.scaleX = 1 - percent;\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}