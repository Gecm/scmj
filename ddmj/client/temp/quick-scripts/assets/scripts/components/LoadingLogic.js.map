{"version":3,"sources":["LoadingLogic.js"],"names":["cc","Class","extends","Component","properties","tipLabel","Label","_stateStr","_progress","_splash","_isLoading","onLoad","sys","isNative","isMobile","cvs","node","getComponent","Canvas","fitHeight","fitWidth","initMgr","string","find","active","start","self","SHOW_TIME","FADE_TIME","checkVersion","vv","UserMgr","require","userMgr","ReplayMgr","replayMgr","http","global","net","GameNetMgr","gameNetMgr","initHandlers","AnysdkMgr","anysdkMgr","init","VoiceMgr","voiceMgr","AudioMgr","audioMgr","Utils","utils","args","urlParse","params","window","location","name","value","str","href","num","indexOf","substr","arr","split","i","length","substring","onGetVersion","ret","version","console","log","SI","VERSION","startPreloading","xhr","complete","fnRequest","sendRequest","setTimeout","fn","abort","onBtnDownloadClicked","openURL","appweb","loader","loadResDir","completedCount","totalCount","item","err","assets","onLoadComplete","director","loadScene","onComplete","update","dt","Math","floor","t","Date","now"],"mappings":"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","file":"LoadingLogic.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["//咋这个编译器中黄色代表函数（方法），蓝色代表变量和方法名，就是标识符，深蓝就是代表关键字\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //这个是正在连接网路的字符串..\r\n        tipLabel:cc.Label,\r\n        //声明这个变量是为了给上面的变量赋值\r\n        _stateStr:'',\r\n        //定义一个计算数值的变量\r\n        _progress:0.0,\r\n        //定义一个splash来找到canvas的字节点\r\n        _splash:null,\r\n\r\n        _isLoading:false,\r\n    },\r\n\r\n    // use this for initialization\r\n    //初始化一般这个脚本中执行\r\n    onLoad: function () {\r\n        //首先执行这个方法\r\n        //先来得到Canvas组件，并且吧fitHeight设置为true。fitWidth = true，场景刚加载的时候我需要干什么\r\n        if(!cc.sys.isNative && cc.sys.isMobile){\r\n            //得到this.node.getComponent（cc.Canvas）\r\n            var cvs = this.node.getComponent(cc.Canvas);//得到本脚挂的本节点的组件Canvas\r\n            cvs.fitHeight = true;//设置是适配度\r\n            cvs.fitWidth = true;\r\n        }\r\n        this.initMgr();//初始化\r\n        this.tipLabel.string = this._stateStr;//这里是吧_stateStr:''，这个值给这个节点（tipLabel:cc.Label,）的string属性，_stateStr:''这个值在前面已经改变。\r\n        \r\n        this._splash = cc.find(\"Canvas/splash\");//把Canvas下的splash节点给this._splash.\r\n\r\n        this._splash.active = false;//将他的active设置为true\r\n        \r\n    },\r\n\r\n    //onEnable: function(){},\r\n    \r\n    start:function(){\r\n        //脚本及激活的时候我需要干的事情\r\n        var self = this;//记录一下本方法的this\r\n        var SHOW_TIME = 3000;//声明两个局部时间变量\r\n        var FADE_TIME = 500;\r\n        // if(cc.sys.os != cc.sys.OS_IOS || !cc.sys.isNative){\r\n        //     self._splash.active = true;\r\n        //     var t = Date.now();\r\n        //     var fn = function(){\r\n        //         var dt = Date.now() - t;\r\n        //         if(dt < SHOW_TIME){\r\n        //             setTimeout(fn,33);\r\n        //         }\r\n        //         else {\r\n        //             var op = (1 - ((dt - SHOW_TIME) / FADE_TIME)) * 255;\r\n        //             if(op < 0){\r\n        //                 self._splash.opacity = 0;\r\n        //                 self.checkVersion();    \r\n        //             }\r\n        //             else{\r\n        //                 self._splash.opacity = op;\r\n        //                 setTimeout(fn,33);   \r\n        //             }\r\n        //         }\r\n        //     };\r\n        //     setTimeout(fn,33);\r\n        // }\r\n        // else{\r\n        //     this._splash.active = false;\r\n        //     this.checkVersion();\r\n        // }\r\n        this.checkVersion();//这是核对版本的方法\r\n    },\r\n\r\n    // update: function(){},\r\n    // lateUpdate: function(){},\r\n    // onDisable: function(){\r\n\r\n    // },\r\n\r\n    // onDestroy: function(){\r\n\r\n    // },\r\n    \r\n    initMgr:function(){\r\n       //这些都是一些全局可能用到的脚本\r\n        //初始化函数，得到一些Script脚本，并对这些脚本进行初始化\r\n        cc.vv = {};//创建一个空的函数对象,实例化脚本\r\n        var UserMgr = require(\"UserMgr\");//获取脚本的名称\r\n        cc.vv.userMgr = new UserMgr();  //实例化这个脚本\r\n\r\n        var ReplayMgr = require(\"ReplayMgr\");\r\n        cc.vv.replayMgr = new ReplayMgr();\r\n        \r\n        cc.vv.http = require(\"HTTP\");\r\n        cc.vv.global = require(\"Global\");\r\n        cc.vv.net = require(\"Net\");\r\n        //游戏管理这个脚本是说我和客服端和服务器连发消息的纽带\r\n        var GameNetMgr = require(\"GameNetMgr\");\r\n        cc.vv.gameNetMgr = new GameNetMgr();\r\n        cc.vv.gameNetMgr.initHandlers();\r\n        // 一些原生接口的管理\r\n\r\n        var AnysdkMgr = require(\"AnysdkMgr\");\r\n        cc.vv.anysdkMgr = new AnysdkMgr();\r\n        cc.vv.anysdkMgr.init();\r\n        //这是声音的管里\r\n        var VoiceMgr = require(\"VoiceMgr\");\r\n        cc.vv.voiceMgr = new VoiceMgr();\r\n        cc.vv.voiceMgr.init();\r\n        \r\n\r\n        var AudioMgr = require(\"AudioMgr\");\r\n        cc.vv.audioMgr = new AudioMgr();\r\n        cc.vv.audioMgr.init();\r\n        \r\n        var Utils = require(\"Utils\");\r\n        cc.vv.utils = new Utils();\r\n        //记住的cc.args是跟获取地址字符串有关的东西\r\n        cc.args = this.urlParse(); //把方法给这个变量\r\n    },\r\n    \r\n    urlParse:function(){\r\n        var params = {};\r\n        if(window.location == null){\r\n            return params;\r\n        }\r\n        var name,value; \r\n        var str=window.location.href; //取得整个地址栏\r\n        \r\n        var num=str.indexOf(\"?\")\r\n        str=str.substr(num+1); //取得所有参数   stringvar.substr(start [, length ]\r\n        \r\n        var arr=str.split(\"&\"); //各个参数放到数组里\r\n        for(var i=0;i < arr.length;i++){ \r\n            num=arr[ i].indexOf(\"=\"); \r\n            if(num>0){ \r\n                name=arr[i].substring(0,num);\r\n                value=arr[i].substr(num+1);\r\n                params[name]=value;\r\n            } \r\n        }\r\n        return params;\r\n    },\r\n    \r\n    checkVersion:function(){\r\n        var self = this;\r\n        var onGetVersion = function(ret){\r\n            if(ret.version == null){\r\n                console.log(\"error.\");\r\n            }\r\n            else{\r\n                //cc.vv.SI = 服务端穿过来的数据这里面饱含了服务器的hallAddr = config.HALL_IP  + \":\" + config.HALL_CLIENT_PORT;\r\n                cc.vv.SI = ret;\r\n                if(ret.version != cc.VERSION){\r\n                    cc.find(\"Canvas/alert\").active = true;\r\n                }\r\n                else{\r\n                    self.startPreloading();\r\n                }\r\n            }\r\n        };\r\n        \r\n        var xhr = null;\r\n        var complete = false;\r\n        var fnRequest = function(){\r\n            self._stateStr = \"正在连接服务器\";\r\n            xhr = cc.vv.http.sendRequest(\"/get_serverinfo\",null,function(ret){\r\n                xhr = null;\r\n                complete = true;\r\n                onGetVersion(ret);\r\n            });\r\n            setTimeout(fn,5000);            \r\n        }\r\n        \r\n        var fn = function(){\r\n            if(!complete){\r\n                if(xhr){\r\n                    xhr.abort();//如果请求已经被发送，则立刻停止\r\n                    self._stateStr = \"连接失败，即将重试\";\r\n                    setTimeout(function(){\r\n                        fnRequest();\r\n                    },5000);\r\n                }\r\n                else{\r\n                    fnRequest();\r\n                }\r\n            }\r\n        };\r\n        fn();\r\n    },\r\n    \r\n    onBtnDownloadClicked:function(){\r\n        cc.sys.openURL(cc.vv.SI.appweb);\r\n    },\r\n    \r\n    startPreloading:function(){\r\n        this._stateStr = \"正在加载资源，请稍候\";\r\n        this._isLoading = true;\r\n        var self = this;\r\n        //重写onProgress函数\r\n        // cc.loader.onProgress = function ( completedCount, totalCount,  item ){\r\n        //     //console.log(\"completedCount:\" + completedCount + \",totalCount:\" + totalCount );\r\n        //     if(self._isLoading){\r\n        //         self._progress = completedCount/totalCount;\r\n        //     }\r\n        // };\r\n        \r\n        cc.loader.loadResDir(\"textures\", function ( completedCount, totalCount,  item ){\r\n            //console.log(\"completedCount:\" + completedCount + \",totalCount:\" + totalCount );\r\n             if(self._isLoading){\r\n                self._progress = completedCount/totalCount;\r\n                //self.tipLabel.string = Math.floor(self._progress * 100) + \"%\"; \r\n            }\r\n        }, function (err, assets) {\r\n            self.onLoadComplete();\r\n        });      \r\n    },\r\n    \r\n    onLoadComplete:function(){\r\n        this._isLoading = false;\r\n        this._stateStr = \"准备登陆\";\r\n        cc.director.loadScene(\"login\");//进入下一个页面\r\n        cc.loader.onComplete = null;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this._stateStr.length == 0){\r\n            return;\r\n        }\r\n        this.tipLabel.string = this._stateStr + ' ';\r\n        if(this._isLoading){\r\n            this.tipLabel.string += Math.floor(this._progress * 100) + \"%\";   \r\n        }\r\n        else{\r\n            var t = Math.floor(Date.now() / 1000) % 4;\r\n            for(var i = 0; i < t; ++ i){\r\n                this.tipLabel.string += '.';\r\n            }            \r\n        }\r\n    }\r\n\r\n});"]}