{"version":3,"sources":["Net.js"],"names":["window","io","require","Global","cc","Class","extends","Component","statics","ip","sio","isPinging","fnDisconnect","handlers","addHandler","event","fn","console","log","handler","data","JSON","parse","on","connect","fnConnect","fnError","self","opts","connected","close","key","value","startHearbeat","lastRecieveTime","Date","now","setInterval","ping","send","stringify","emit","disconnect","test","fnResult","xhr","ret","isonline","arr","split","account","vv","userMgr","sign","port","http","sendRequest","setTimeout","abort"],"mappings":"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","file":"Net.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["if(window.io == null){\n    window.io = require(\"socket-io\");\n}\n \nvar Global = cc.Class({\n    extends: cc.Component,\n    statics: {\n        ip:\"\",\n        sio:null,\n        isPinging:false,\n        fnDisconnect:null,\n        handlers:{},\n        addHandler:function(event,fn){\n            if(this.handlers[event]){\n                console.log(\"event:\" + event + \"' handler has been registered.\");\n                return;\n            }\n\n            var handler = function(data){\n                //console.log(event + \"(\" + typeof(data) + \"):\" + (data? data.toString():\"null\"));\n                if(event != \"disconnect\" && typeof(data) == \"string\"){\n                    data = JSON.parse(data);\n                }\n                fn(data);\n            };\n            \n            this.handlers[event] = handler; \n            if(this.sio){\n                console.log(\"register:function \" + event);\n                //把消息和事件放到这里面\n                this.sio.on(event,handler);\n            }\n        },\n        connect:function(fnConnect,fnError) {\n            var self = this;\n            \n            var opts = {\n                'reconnection':false,\n                'force new connection': true,\n                'transports':['websocket', 'polling']\n            }\n            this.sio = window.io.connect(this.ip,opts);\n            this.sio.on('reconnect',function(){\n                console.log('reconnection');\n            });\n            this.sio.on('connect',function(data){\n                self.sio.connected = true;\n                fnConnect(data);\n            });\n            \n            this.sio.on('disconnect',function(data){\n                console.log(\"disconnect\");\n                self.sio.connected = false;\n                self.close();\n            });\n            \n            this.sio.on('connect_failed',function (){\n                console.log('connect_failed');\n            });\n            \n            for(var key in this.handlers){\n                var value = this.handlers[key];\n                if(typeof(value) == \"function\"){\n                    if(key == 'disconnect'){\n                        this.fnDisconnect = value;\n                    }\n                    else{\n                        console.log(\"register:function \" + key);\n                        this.sio.on(key,value);                        \n                    }\n                }\n            }\n            \n            this.startHearbeat();\n        },\n        \n        startHearbeat:function(){\n            this.sio.on('game_pong',function(){\n                console.log('game_pong');\n                self.lastRecieveTime = Date.now(); \n            });\n            this.lastRecieveTime = Date.now();\n            var self = this;\n            console.log(1);\n            if(!self.isPinging){\n                console.log(1);\n                self.isPinging = true;\n                setInterval(function(){\n                    console.log(3);\n                    if(self.sio){\n                        console.log(4);\n                        if(Date.now() - self.lastRecieveTime > 10000){\n                            self.close();\n                        }\n                        else{\n                            self.ping();\n                        }                        \n                    }\n                },5000);\n            }   \n        },\n        send:function(event,data){\n            if(this.sio.connected){\n                if(data != null && (typeof(data) == \"object\")){\n                    data = JSON.stringify(data);\n                    //console.log(data);              \n                }\n                this.sio.emit(event,data);                \n            }\n        },\n        \n        ping:function(){\n            this.send('game_ping');\n        },\n        \n        close:function(){\n            console.log('close');\n            if(this.sio && this.sio.connected){\n                this.sio.connected = false;\n                this.sio.disconnect();\n                this.sio = null;\n            }\n            if(this.fnDisconnect){\n                this.fnDisconnect();\n                this.fnDisconnect = null;\n            }\n        },\n        \n        test:function(fnResult){\n            var xhr = null;\n            var fn = function(ret){\n                fnResult(ret.isonline);\n                xhr = null;\n            }\n            \n            var arr = this.ip.split(':');\n            var data = {\n                account:cc.vv.userMgr.account,\n                sign:cc.vv.userMgr.sign,\n                ip:arr[0],\n                port:arr[1],\n            }\n            xhr = cc.vv.http.sendRequest(\"/is_server_online\",data,fn);\n            setTimeout(function(){\n                if(xhr){\n                    xhr.abort();\n                    fnResult(false);                    \n                }\n            },1500);\n            /*\n            var opts = {\n                'reconnection':false,\n                'force new connection': true,\n                'transports':['websocket', 'polling']\n            }\n            var self = this;\n            this.testsio = window.io.connect(this.ip,opts);\n            this.testsio.on('connect',function(){\n                console.log('connect');\n                self.testsio.close();\n                self.testsio = null;\n                fnResult(true);\n            });\n            this.testsio.on('connect_error',function(){\n                console.log('connect_failed');\n                self.testsio = null;\n                fnResult(false);\n            });\n            */\n        }\n    },\n});"]}